@page "/"
<div class="rpgui-content">
    @if (user is not null)
    {
        <button class="rpgui-button" @onclick="Logout">
            Logout @user.DisplayName
        </button>
    }
    else
    {
        <p>
            Checking authentication...
        </p>
    }
    <style>
        /* Set row/column count dynamically */
        .game-grid {
            grid-template: repeat(@gridSize, 1fr) / repeat(@gridSize, 1fr);
        }
    </style>
    <div class="game">
        <div class="game-grid">
            @for (int row = 0; row < gridSize; row++)
            {
                for (int col = 0; col < gridSize; col++)
                {
                    // Do not capture the loop variable in the onclick lambda
                    string location = Location(col, row);
                    <div class="game-grid-cell @CssClassCell(location)" @onclick="_ => SelectLocation(location)">
                        <span style="color: blue">
                            @Symbols(location, e => e.OwnerId == user!.Id)
                        </span>
                        <span style="color: red">
                            @Symbols(location, e => e.OwnerId != user!.Id)
                        </span>
                    </div>
                }
            }
        </div>
        <div class="game-detail rpgui-container framed">
            <h1>
                @DetailTitle
            </h1>
            @if (selectedCellCharacters.Any())
            {
                <div class="game-detail-grid">
                    @if (selectedCharacter is not null)
                    {
                        <div class="rpgui-container framed-grey">
                            <CharacterStats Character="selectedCharacter" />
                            <div class="game-toolbar">
                                @*
                        <button type="button" class="rpgui-button" @onclick="() => DoActivity(Gathering)" disabled="@selectedCharacter.IsActive">
                        <img src="images/gather.png" />
                        </button>
                        *@
                                <button type="button" class="rpgui-button" @onclick="() => DoActivity(Training)" disabled="@selectedCharacter.IsActive">
                                    <img src="images/dumbbell.png" />
                                </button>
                                <button type="button" class="rpgui-button" @onclick="StopActivity" disabled="@(!selectedCharacter.IsActive)">
                                    <img src="images/stop.png" />
                                </button>
                                <button type="button" class="rpgui-button" @onclick="CheckStatus">
                                    <img src="images/refresh.png" />
                                </button>
                            </div>
                            <div class="game-dpad-grid">
                                <button type="button" class="rpgui-button dpad-grid-lf" @onclick="() => Move(0, -1)">
                                    <span>&#x1F880;</span>
                                </button>
                                <button type="button" class="rpgui-button dpad-grid-rt" @onclick="() => Move(0, +1)">
                                    <span>&#x1F882;</span>
                                </button>
                                <button type="button" class="rpgui-button dpad-grid-up" @onclick="() => Move(1, -1)">
                                    <span>&#x1F881;</span>
                                </button>
                                <button type="button" class="rpgui-button dpad-grid-dn" @onclick="() => Move(1, +1)">
                                    <span>&#x1F883;</span>
                                </button>
                            </div>
                        </div>
                    }
                    <div>
                        <h4>
                            Mine
                        </h4>
                        <div class="rpgui-container framed game-detail-scroll">
                            @foreach (var character in myCharacters)
                            {
                                <CharacterListItem Character="character"
                                           Select="c => { selectedCharacter = c; StateHasChanged(); }"
                                           IsSelected="c => selectedCharacter == c" />
                            }
                        </div>
                        <button type="button" class="rpgui-button" @onclick="NewCharacter">
                            <span>New</span>
                        </button>
                    </div>
                    <div>
                        <h4>
                            Theirs
                        </h4>
                        <div class="rpgui-container framed game-detail-scroll">
                            @foreach (var character in theirCharacters)
                            {
                                <CharacterListItem Character="character"
                                           Select="c => { selectedTheirCharacter = c; StateHasChanged(); }"
                                           IsSelected="c => selectedTheirCharacter == c" />
                            }
                        </div>
                    </div>
                    @if (selectedTheirCharacter is not null)
                    {
                        <div class="rpgui-container framed-grey">
                            <CharacterStats Character="selectedTheirCharacter" />
                            @if (selectedCharacter is not null)
                            {
                                <div class="game-toolbar">
                                    <button type="button" class="rpgui-button" @onclick="Attack">
                                        <img src="images/sword.png" />
                                    </button>
                                </div>
                            }
                        </div>
                    }
                </div>
            }
            else if (selectedLocation is not null)
            {
                <div>
                    <button type="button" class="rpgui-button" @onclick="NewCharacter">
                        <span>New Character</span>
                    </button>
                </div>
            }
        </div>
    </div>
</div>

<BlazoredToasts />
